#!/bin/bash

function showtime () {
        TIME=$1;
        OUT=""
	
	#echo "original: $TIME"
        
	SECS=$(($TIME%60));		# any leftover seconds from a minute
        TIME=$(($TIME - $SECS));	# then remove those...
        
	# TIME should now be an exact num minutes
	#echo "less $SECS seconds: $TIME"
				
	MINS=$((($TIME%3600)/60));	# any leftover minutes from an hour
        TIME=$(($TIME - ($MINS*60)));	# then remove those...
        
	# TIME should now be an exact num hours
	#echo "less $MINS minutes: $TIME"
				
	HRS=$((($TIME%86400)/3600));	# any leftover hours in a day
        TIME=$(($TIME - ($HRS*3600)));		# then remove those...
	
	# TIME should now be an exact num days 
	#echo "less $HRS hours: $TIME"
	
	DAYS=$(($TIME/86400));
	
	if [[ $DAYS -ne 0 ]]; then
                OUT="${DAYS} days"
		DAYDEC=${DAYS}
        fi
	if [[ $HRS -ne 0 ]]; then
                OUT="${OUT} ${HRS} hrs"
        fi
        if [[ $MINS -ne 0 ]]; then
                OUT="${OUT} ${MINS} mins"
        fi
        if [[ $SECS -ne 0 ]]; then
                OUT="${OUT} ${SECS} secs"
        fi

	# the hours/min/sec are what % of a day?
	DECPART=$(echo "scale=3 ; ($1-$TIME)/86400" | bc | tr -d ".")
	DAYDEC="${DAYDEC}.${DECPART}"
}

if [[ $1 == "" ]]; then
	foo=$(date +%s)
else
	foo=$1
fi

showtime $foo
# UNIX_OUT=$(date -d "1970-01-01 00:00:00 +0000 $foo sec" +"%Y-%m-%d %T %z")
UNIX_OUT=$(date -d "@$foo")

echo "$UNIX_OUT ($OUT [$DAYDEC days])"
